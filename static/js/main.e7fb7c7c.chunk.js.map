{"version":3,"sources":["sounds/crash.wav","sounds/crash2.wav","sounds/hat.wav","sounds/kick.wav","sounds/revcrash.wav","sounds/ride.wav","sounds/sdst.wav","sounds/snr.wav","sounds/tom.wav","reducers/sound.js","actions/types.js","reducers/status.js","reducers/index.js","store.js","components/Box.js","components/VolumeSlider.js","components/SoundButtons.js","components/SoundButton.js","constants.js","sounds.js","containers/SoundButtonsContainer.js","actions/sound.js","components/CurrentSoundBox.js","containers/CurrentSoundBoxContainer.js","components/PowerButton.js","containers/PowerButtonContainer.js","actions/status.js","containers/VolumeSliderContainer.js","containers/BoxContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","sound","volume","state","arguments","length","undefined","action","type","Object","objectSpread","on","status","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","Box","styled","div","_templateObject","propTypes","VolumeSlider","VolumeSlider_templateObject","SoundButtons","SoundButtons_templateObject","SoundButton","button","SoundButton_templateObject","props","isActive","CRASH","CRASH2","HAT","KICK","REVCRASH","RIDE","SDST","SNR","TOM","sounds","drums","DRUMS","key","SoundButtonsContainer","src","play","i","_this","updateCurrentSound","console","log","setState","activeIndex","audio","pause","currentTime","handleChange","e","target","value","_this2","this","document","getElementById","addEventListener","code","_this3","react_default","a","createElement","components_SoundButtons","map","d","components_SoundButton","onClick","id","onChange","Component","connect","dispatch","CurrentSoundBox","CurrentSoundBox_templateObject","CurrentSoundBoxContainer","components_CurrentSoundBox","currentSound","PowerButton","PowerButton_templateObject","PowerButtonContainer","components_PowerButton","updateCurrentStatus","VolumeSliderContainer","changeVolume","components_VolumeSlider","min","max","step","BoxContainer","components_Box","containers_SoundButtonsContainer","containers_PowerButtonContainer","containers_VolumeSliderContainer","containers_CurrentSoundBoxContainer","GlobalStyle","createGlobalStyle","App_templateObject","App","es","containers_BoxContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e7fb7c7c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crash.7fc5a695.wav\";","module.exports = __webpack_public_path__ + \"static/media/crash2.e35f87bb.wav\";","module.exports = __webpack_public_path__ + \"static/media/hat.647a17c0.wav\";","module.exports = __webpack_public_path__ + \"static/media/kick.152e8f12.wav\";","module.exports = __webpack_public_path__ + \"static/media/revcrash.f2943801.wav\";","module.exports = __webpack_public_path__ + \"static/media/ride.49f8d781.wav\";","module.exports = __webpack_public_path__ + \"static/media/sdst.e8c95ef2.wav\";","module.exports = __webpack_public_path__ + \"static/media/snr.8c60cff1.wav\";","module.exports = __webpack_public_path__ + \"static/media/tom.35a02999.wav\";","import { CHANGE_SOUND, CHANGE_VOLUME } from \"../actions/types\";\n\nconst initialState = {\n  sound: \"\",\n  volume: 50\n};\n\nconst sound = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_SOUND:\n      return {\n        ...state,\n        sound: action.sound\n      };\n    case CHANGE_VOLUME:\n      return {\n        ...state,\n        volume: action.volume\n      };\n    default:\n      return state;\n  }\n};\n\nexport default sound;\n","export const CHANGE_SOUND = \"CHANGE_SOUND\";\nexport const CHANGE_STATUS = \"CHANGE_STATUS\";\nexport const CHANGE_VOLUME = \"CHANGE_VOLUME\";\n","import { CHANGE_STATUS } from \"../actions/types\";\n\nconst initialState = {\n  on: true\n};\n\nconst status = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_STATUS:\n      return {\n        ...state,\n        on: !action.on\n      };\n    default:\n      return state;\n  }\n};\n\nexport default status;\n","import { combineReducers } from \"redux\";\nimport sound from \"./sound\";\nimport status from \"./status\";\n\nexport default combineReducers({\n  sound,\n  status\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  {},\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Box = styled.div`\n  padding: 12px;\n  border: 2px solid #f2f2f2;\n  border-radius: 2px;\n  background: #6f6f6f;\n  margin: 0 auto;\n  width: 300px;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n\n  // @media (min-width: 768px) {\n  //   width: 600px;\n  //   height: 400px;\n  // }\n`;\n\nBox.propTypes = {};\n\nexport default Box;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst VolumeSlider = styled.div`\n  margin: 30px auto 0;\n`;\n\nVolumeSlider.propTypes = {};\n\nexport default VolumeSlider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst SoundButtons = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nSoundButtons.propTypes = {};\n\nexport default SoundButtons;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst SoundButton = styled.button`\n  background: ${props => (props.isActive ? \"pink\" : \"#f2f2f2\")};\n  &:active {\n    background: pink;\n    padding-left: 2px;\n  }\n  width: 95px;\n  font-size: 0.9rem;\n  text-align: center;\n  height: 95px;\n  margin-bottom: 5px;\n  box-shadow: 1px 1px 4px #1f1f1f;\n  border: 1px solid #000;\n  border-radius: 2px;\n`;\n\nSoundButton.propTypes = {};\n\nexport default SoundButton;\n","export const CRASH = \"CRASH\";\nexport const CRASH2 = \"CRASH2\";\nexport const HAT = \"HAT\";\nexport const KICK = \"KICK\";\nexport const REVCRASH = \"REVCRASH\";\nexport const RIDE = \"RIDE\";\nexport const SDST = \"SDST\";\nexport const SNR = \"SNR\";\nexport const TOM = \"TOM\";\n","import CRASH from \"./sounds/crash.wav\";\nimport CRASH2 from \"./sounds/crash2.wav\";\nimport HAT from \"./sounds/hat.wav\";\nimport KICK from \"./sounds/kick.wav\";\nimport REVCRASH from \"./sounds/revcrash.wav\";\nimport RIDE from \"./sounds/ride.wav\";\nimport SDST from \"./sounds/sdst.wav\";\nimport SNR from \"./sounds/snr.wav\";\nimport TOM from \"./sounds/tom.wav\";\n\nexport default {\n  CRASH,\n  CRASH2,\n  HAT,\n  KICK,\n  REVCRASH,\n  RIDE,\n  SDST,\n  SNR,\n  TOM\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport SoundButtons from \"../components/SoundButtons\";\nimport SoundButton from \"../components/SoundButton\";\nimport { updateCurrentSound } from \"../actions/sound\";\nimport * as DRUMS from \"../constants\";\nimport sounds from \"../sounds\";\n\nconst drums = [\n  { sound: DRUMS.CRASH, key: \"q\" },\n  { sound: DRUMS.CRASH2, key: \"w\" },\n  { sound: DRUMS.HAT, key: \"e\" },\n  { sound: DRUMS.KICK, key: \"a\" },\n  { sound: DRUMS.REVCRASH, key: \"s\" },\n  { sound: DRUMS.RIDE, key: \"d\" },\n  { sound: DRUMS.SDST, key: \"z\" },\n  { sound: DRUMS.SNR, key: \"x\" },\n  { sound: DRUMS.TOM, key: \"c\" }\n];\n\nclass SoundButtonsContainer extends Component {\n  state = {\n    src: \"\",\n    volume: 50\n  };\n\n  play = (sound, i) => {\n    if (!this.props.on) {\n      return;\n    }\n\n    this.props.updateCurrentSound(sound);\n    console.log(DRUMS[\"CRASH\"]);\n    let src = sounds[DRUMS[sound]];\n\n    this.setState(\n      {\n        src,\n        activeIndex: i\n      },\n      () => {\n        this.audio.pause();\n        this.audio.currentTime = 0;\n        this.audio.play();\n      }\n    );\n  };\n  x;\n\n  componentDidMount() {\n    this.audio = document.getElementById(\"audio\");\n\n    // Add event listeners\n    document.addEventListener(\"keydown\", e => {\n      switch (e.code) {\n        case \"KeyQ\":\n          this.play(drums[0].sound, 0);\n          break;\n        case \"KeyW\":\n          this.play(drums[1].sound, 1);\n          break;\n        case \"KeyE\":\n          this.play(drums[2].sound, 2);\n          break;\n        case \"KeyA\":\n          this.play(drums[3].sound, 3);\n          break;\n        case \"KeyS\":\n          this.play(drums[4].sound, 4);\n          break;\n        case \"KeyD\":\n          this.play(drums[5].sound, 5);\n          break;\n        case \"KeyZ\":\n          this.play(drums[6].sound, 6);\n          break;\n        case \"KeyX\":\n          this.play(drums[7].sound, 7);\n          break;\n        case \"KeyC\":\n          this.play(drums[8].sound, 8);\n          break;\n        default:\n          break;\n      }\n    });\n\n    document.addEventListener(\"keyup\", e => {\n      this.setState({\n        activeIndex: null\n      });\n    });\n  }\n\n  handleChange = e => {\n    this.setState({\n      volume: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <SoundButtons>\n        {drums.map((d, i) => (\n          <SoundButton\n            key={i}\n            onClick={() => this.play(d.sound)}\n            isActive={this.state.activeIndex === i}\n          >\n            {d.key}\n          </SoundButton>\n        ))}\n        <audio\n          id=\"audio\"\n          src={this.state.src}\n          volume={this.state.volume}\n          onChange={this.handleChange}\n        />\n      </SoundButtons>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  on: state.status.on\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateCurrentSound }\n)(SoundButtonsContainer);\n","import { CHANGE_SOUND, CHANGE_VOLUME } from \"./types\";\n\nexport const updateCurrentSound = sound => dispatch => {\n  dispatch({\n    type: CHANGE_SOUND,\n    sound\n  });\n};\n\nexport const changeVolume = volume => dispatch => {\n  dispatch({\n    type: CHANGE_VOLUME,\n    volume\n  });\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst CurrentSoundBox = styled.div`\n  width: 100px;\n  height: 40px;\n  margin: 30px auto 0;\n  background: #f2f2f2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nCurrentSoundBox.propTypes = {};\n\nexport default CurrentSoundBox;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CurrentSoundBox from \"../components/CurrentSoundBox\";\n\nclass CurrentSoundBoxContainer extends Component {\n  render() {\n    return (\n      <CurrentSoundBox>\n        <p>{this.props.currentSound}</p>\n      </CurrentSoundBox>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentSound: state.sound.sound\n});\n\nexport default connect(mapStateToProps)(CurrentSoundBoxContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst PowerButton = styled.button`\n  background: ${props => (props.on ? \"green\" : \"crimson\")}\n  width: 50px;\n  height: 25px;\n  margin: 40px auto 0;\n`;\n\nPowerButton.propTypes = {};\n\nexport default PowerButton;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PowerButton from \"../components/PowerButton\";\nimport { updateCurrentStatus } from \"../actions/status\";\n\nclass PowerButtonContainer extends Component {\n  render() {\n    return (\n      <PowerButton\n        on={this.props.on}\n        onClick={() => this.props.updateCurrentStatus(this.props.on)}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  on: state.status.on\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateCurrentStatus }\n)(PowerButtonContainer);\n","import { CHANGE_STATUS } from \"./types\";\n\nexport const updateCurrentStatus = status => dispatch => {\n  dispatch({\n    type: CHANGE_STATUS,\n    on: status\n  });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport VolumeSlider from \"../components/VolumeSlider\";\nimport { changeVolume } from \"../actions/sound\";\n\nclass VolumeSliderContainer extends Component {\n  handleChange = e => {\n    this.props.changeVolume(e.target.value);\n  };\n  render() {\n    return (\n      <VolumeSlider>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"100\"\n          step=\"1\"\n          value={this.props.volume}\n          onChange={this.handleChange}\n        />\n        <span>{this.props.volume}</span>\n      </VolumeSlider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  volume: state.sound.volume\n});\n\nexport default connect(\n  mapStateToProps,\n  { changeVolume }\n)(VolumeSliderContainer);\n","import React, { Component } from \"react\";\nimport Box from \"../components/Box\";\nimport VolumeSlider from \"../components/VolumeSlider\";\nimport SoundButtonsContainer from \"./SoundButtonsContainer\";\nimport { connect } from \"react-redux\";\nimport CurrentSoundBoxContainer from \"./CurrentSoundBoxContainer\";\nimport PowerButtonContainer from \"./PowerButtonContainer\";\nimport VolumeSliderContainer from \"./VolumeSliderContainer\";\n\nclass BoxContainer extends Component {\n  render() {\n    return (\n      <div>\n        <Box>\n          <SoundButtonsContainer />\n          <PowerButtonContainer />\n          <VolumeSliderContainer />\n          <CurrentSoundBoxContainer />\n        </Box>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  sound: state.sound\n});\n\nexport default connect(mapStateToProps)(BoxContainer);\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport BoxContainer from \"./containers/BoxContainer\";\nimport { createGlobalStyle } from \"styled-components\";\nimport crash from \"./sounds/crash.wav\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #2f2f2f;\n    padding: 30px 15px;\n  }\n\n  * {\n    font-family: Ariana;\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <GlobalStyle />\n        <BoxContainer />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}